# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/dma/st,stm32-dma3.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: STMicroelectronics STM32 DMA3 Controller

description: |
  The STM32 DMA3 is a direct memory access controller with different features
  depending on its hardware configuration.
  It is either called LPDMA (Low Power), GPDMA (General Purpose) or
  HPDMA (High Performance).
  Its hardware configuration registers allow to dynamically expose its features.

  GPDMA and HPDMA support 16 independent DMA channels, while only 4 for LPDMA.
  GPDMA and HPDMA supports 256 DMA requests from peripherals, 8 for LPDMA.

  Bindings are generic for the 3 DMA3 configurations.

  DMA clients connected to the STM32 DMA3 controller must use the format described
  in the dma.txt file, using a four-cell specifier for each channel.
  A phandle to the DMA controller plus the following four integer cells:
    1. The request line number
    2. A 32-bit mask specifying the DMA channel requirements
      -bit 0-1: The priority level
        0x0: low priority, low weight
        0x1: low priority, mid weight
        0x2: low priority, high weight
        0x3: high priority
      -bit 4-7: The FIFO requirement for queuing source and destination transfers
        0x0: no FIFO requirement/any channel can fit
        0x2: FIFO of 8 bytes (2^2+1)
        0x4: FIFO of 32 bytes (2^4+1)
        0x6: FIFO of 128 bytes (2^6+1)
    3. A 32-bit mask specifying the DMA transfer requirements
      -bit 0: The source incrementing burst
        0x0: fixed burst
        0x1: contiguously incremented burst
      -bit 1: The source allocated port
        0x0: port 0 is allocated to the source transfer
        0x1: port 1 is allocated to the source transfer
      -bit 4: The destination incrementing burst
        0x0: fixed burst
        0x1: contiguously incremented burst
      -bit 5: The destination allocated port
        0x0: port 0 is allocated to the destination transfer
        0x1: port 1 is allocated to the destination transfer
      -bit 8: The type of hardware request
        0x0: burst
        0x1: block
      -bit 9: The control mode
        0x0: DMA controller control mode
        0x1: peripheral control mode
      -bit 12-13: The transfer complete event mode
        0x0: at block level
        0x2: at LLI level
        0x3: at channel level (last LLI)
    4. A 32-bit mask specifying the DMA transfer extended requirements
      -bit 0-12: The source address offset increment
      -bit 13: The source address increment type
        0x0: source address incremented by adding the source address offset
        0x1: source address decremented by substracting the source address offset
      -bit 14-15: The block alignment mode
        0x0: address offset and block size are programmed in number of bytes
        0x1: address offset and block size are programmed in multiple of 16 bytes
        0x2: address offset and block size are programmed in multiple of 256 bytes
      -bit 16-28: The destination address offset increment
      -bit 29: The destination address increment type
        0x0: destination address incremented by adding the destination address offset
        0x1: destination address decremented by substracting the destination address offset

maintainers:
  - Amelie Delaunay <amelie.delaunay@foss.st.com>

allOf:
  - $ref: "dma-controller.yaml#"

properties:
  "#dma-cells":
    const: 4

  compatible:
    const: st,stm32-dma3

  reg:
    maxItems: 1

  clocks:
    maxItems: 1

  resets:
    maxItems: 1

  interrupts:
    minItems: 4
    maxItems: 16

required:
  - compatible
  - reg
  - clocks
  - interrupts

unevaluatedProperties: false

examples:
  - |
    #include <dt-bindings/interrupt-controller/arm-gic.h>
    #include <dt-bindings/clock/stm32mp25-clks.h>
    dma-controller@40400000 {
      compatible = "st,stm32-dma3";
      reg = <0x40400000 0x1000>;
      interrupts = <GIC_SPI 33 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 34 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 35 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 37 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 38 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 39 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 40 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 41 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 42 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 43 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 44 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 45 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>,
                   <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH>;
      clocks = <&rcc CK_BUS_HPDMA1>;
      #dma-cells = <4>;
    };
...

