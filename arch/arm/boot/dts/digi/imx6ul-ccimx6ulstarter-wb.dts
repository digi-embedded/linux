/*
 * Copyright 2016, 2017 Digi International, Inc.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
/* i.MX6 UltraLite CPU */
#include "../nxp/imx/imx6ul.dtsi"
/* ConnectCore 6UL (wireless/bluetooth variant) */
#include "imx6ul-ccimx6ul-wb.dtsi"
/* ConnectCore 6UL StarterBoard */
#include "imx6ul-ccimx6ulstarter.dtsi"

/*
 * Include in adc-ch-list the ADC channels (from 0 to 9) that you want to
 * enable. Note that the iomux has to be configured accordingly in pinctrl_adc1
 * to configure the pad for ADC operation
 */
&adc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_adc1>;
	adc-ch-list = <4>;
	status = "okay";
};

/* ECSPI3 (as master - Raspberry PI Expansion header) */
&ecspi3 {
	status = "okay";

	/*
	 * Add your slave devices here. Next is an example of spidev.
	 */
	spidev@0 {
		reg = <0>;
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <1000000>;
	};
};

&fec1 {
	status = "okay";
};

/* CAN1 (Raspberry PI Expansion header) */
&can1 {
	status = "okay";
};

/* I2C2 (Raspberry PI Expansion header and Grove connector) */
&i2c2 {
	status = "okay";
};

/* MCA IO0 connected to Grove ADC connector */
&mca_adc {
	digi,adc-ch-list = <0>;
	digi,adc-vref = <3000000>;
};

/* Uncomment to Enable Tamper detection. There are 2 digital (0 and 1) and 2
 * analog (2 and 3) tamper interfaces.
 */
//&mca_tamper {
//	digi,tamper-if-list = <0 1 2 3>;
//};

/* PWM1 (Raspberry PI Expansion header) */
&pwm1 {
	status = "okay";
};

/* UART4 (Raspberry PI Expansion header) */
&uart4 {
	status = "okay";
};

/* UART5 (Console) */
&uart5 {
	status = "okay";
};

&usbotg1 {
	status = "okay";
};

&usbotg2 {
	status = "okay";
};

/* USDHC2 (microSD) */
&usdhc2 {
	status = "okay";
};

/* Pin mux configuration */
&iomuxc {
	pinctrl-0 =  <&pinctrl_hog>, <&pinctrl_expansion>;

	imx6ul-ccimx6ul {
		pinctrl_adc1: adc1grp {
			fsl,pins = <
				/* GPIO1_4/ADC1_IN4 (pin 7 of the expansion header) */
				MX6UL_PAD_GPIO1_IO04__GPIO1_IO04        0xb0
			>;
		};

		/* Expansion Connector */
		pinctrl_expansion: expansiongrp {
			fsl,pins = <
				/*
				 * Comment the pads you wish to use on any
				 * device driver, and uncomment the ones you
				 * want to use as GPIO (requires disabling the
				 * driver that manages them).
				 */
				/* GPIO3_4 */
				MX6UL_PAD_LCD_RESET__GPIO3_IO04		0xf030
				/* JTAG_TDI/GPIO1_13 */
				MX6UL_PAD_JTAG_TDI__GPIO1_IO13		0x1b0b0
				/* GPIO3_10_PROT */
				MX6UL_PAD_LCD_DATA05__GPIO3_IO10	0x1b0b0
				/* JTAG_MOD/GPIO1_10 */
				MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0x1b0b0
				/* JTAG_TMS/GPIO1_11 */
				MX6UL_PAD_JTAG_TMS__GPIO1_IO11		0x1b0b0
				/* GPIO3_12_PROT */
				MX6UL_PAD_LCD_DATA07__GPIO3_IO12	0x1b0b0
				/* PWM2/I2C3_SCL_PROT */
				MX6UL_PAD_LCD_DATA01__GPIO3_IO06	0x1b0b0
				/* RASPBERRY_29/GPIO5 */
				MX6UL_PAD_GPIO1_IO05__GPIO1_IO05	0x1b0b0
				/* PWM4_PROT */
				MX6UL_PAD_LCD_DATA03__GPIO3_IO08	0x1b0b0
				/* GPIO3_7/PWM3_PROT */
				MX6UL_PAD_LCD_DATA02__GPIO3_IO07	0x1b0b0
				/* JTAG_TDO/GPIO1_12 */
				MX6UL_PAD_JTAG_TDO__GPIO1_IO12		0x1b0b0
				/* RASPBERRY_36/CSI_MCLK */
				MX6UL_PAD_CSI_MCLK__GPIO4_IO17		0x1b0b0
				/* RASPBERRY_37/CSI_PIXCLK */
				MX6UL_PAD_CSI_PIXCLK__GPIO4_IO18	0x1b0b0
				/* JTAG_nTRST/GPIO1_15 */
				MX6UL_PAD_JTAG_TRST_B__GPIO1_IO15	0x1b0b0
				/* JTAG_TCK/GPIO1_14 */
				MX6UL_PAD_JTAG_TCK__GPIO1_IO14		0x1b0b0
			>;
		};
	};
};
