/*
 * Copyright 2018-2020 Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/ {
	model = "Digi International ConnectCore 8X SBC Pro.";
	compatible = "digi,ccimx8x-sbc-pro", "digi,ccimx8x", "digi,ccimx8", "fsl,imx8qxp";
	digi,machine,name = "ccimx8x-sbc-pro";

	chosen {
		stdout-path = &lpuart2;
	};

	cbtl04gp {
		compatible = "nxp,cbtl04gp";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_typec_mux>;
		switch-gpios = <&lsio_gpio4 6 GPIO_ACTIVE_LOW>;
		orientation-switch;

		port {
			usb3_data_ss: endpoint {
				remote-endpoint = <&typec_con_ss>;
			};
		};
	};

	lvds_backlight0: lvds_backlight@0 {
		compatible = "pwm-backlight";
		pwms = <&pwm_mipi_lvds0 0 100000 0>;

		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		power-supply = <&reg_5v_display>;
		status = "disabled";
	};

	lvds_backlight1: lvds_backlight@1 {
		compatible = "pwm-backlight";
		pwms = <&pwm_mipi_lvds1 0 100000 0>;

		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		power-supply = <&reg_5v_display>;
		status = "disabled";
	};

	lvds0_panel: lvds0_panel@0 {
		compatible = "panel-lvds";
		backlight = <&lvds_backlight0>;
		power-supply = <&reg_5v_display>;
		width-mm = <216>;
		height-mm = <135>;
		data-mapping = "jeida-18";
		status = "disabled";

		port {
			panel_lvds0_in: endpoint {
				remote-endpoint = <&lvds0_out>;
			};
		};

		/* AUO G101EVN01.0 */
		panel-timing {
			clock-frequency = <68930000>;
			hactive = <1280>;
			vactive = <800>;
			hfront-porch = <120>;
			hback-porch = <0>;
			hsync-len = <8>;
			vback-porch = <10>;
			vfront-porch = <0>;
			vsync-len = <6>;
			hsync-active = <1>;
			vsync-active = <1>;
		};
	};

	lvds1_panel: lvds1_panel@1 {
		compatible = "panel-lvds";
		backlight = <&lvds_backlight1>;
		power-supply = <&reg_5v_display>;
		width-mm = <216>;
		height-mm = <135>;
		data-mapping = "jeida-18";
		status = "disabled";

		port {
			panel_lvds1_in: endpoint {
				remote-endpoint = <&lvds1_out>;
			};
		};

		/* AUO G101EVN01.0 */
		panel-timing {
			clock-frequency = <68930000>;
			hactive = <1280>;
			vactive = <800>;
			hfront-porch = <120>;
			hback-porch = <0>;
			hsync-len = <8>;
			vback-porch = <10>;
			vfront-porch = <0>;
			vsync-len = <6>;
			hsync-active = <1>;
			vsync-active = <1>;
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_3v3_ext: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "3v3_ext";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&mca_gpio 5 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&reg_3v3>;
			regulator-boot-on;
		};

		reg_1v8_ext: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "1v8_ext";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			gpio = <&mca_gpio 6 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&reg_1v8>;
			regulator-boot-on;
		};

		reg_3v3_eth0: regulator@3 {
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&pinctrl_reg_3v3_eth0>;
			pinctrl-1 = <&pinctrl_reg_3v3_eth0_sleep>;
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "3v3_eth0";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio3 13 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			startup-delay-us = <10000>;
			vin-supply = <&reg_3v3_ext>;
		};

		reg_5v_display: regulator@4 {
			compatible = "regulator-fixed";
			reg = <4>;
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&pinctrl_reg_5v_display>;
			pinctrl-1 = <&pinctrl_reg_5v_display_sleep>;
			regulator-name = "5v_display";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&lsio_gpio0 13 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_3v3_audio: regulator@5 {
			compatible = "regulator-fixed";
			reg = <5>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_reg_3v3_aud>;
			regulator-name = "3v3_audio";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio0 14 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			startup-delay-us = <1000>;
			vin-supply = <&reg_3v3_ext>;
		};

		/* PCIe mini card regulator, disabled by default */
		reg_3v3_pcie: regulator@6 {
			compatible = "regulator-fixed";
			reg = <6>;
			regulator-name = "vcc";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio0 31 GPIO_ACTIVE_HIGH>; /* PCIE_VCC_EN */
			enable-active-high;
			startup-delay-us = <100000>;
			status = "disabled";
		};

		reg_3v3_usb_hub: regulator@7 {
			compatible = "regulator-fixed";
			reg = <7>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_reg_3v3_usb_hub>;
			regulator-name = "3v3_usb_hub";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio0 15 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&reg_3v3_ext>;
		};

		reg_3v3_usb_sw: regulator@8 {
			compatible = "regulator-fixed";
			reg = <8>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_reg_3v3_usb_sw>;
			regulator-name = "3v3_usb_sw";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio4 5 GPIO_ACTIVE_LOW>;
		};

		/* Dummy regulator to keep PMIC powered via asserted MCA_IO9 */
		pmic_pwrdn: regulator@9 {
			compatible = "regulator-fixed";
			reg = <9>;
			regulator-name = "pmic-pwrdn";
			gpio = <&mca_gpio 9 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			regulator-always-on;
		};
	};

	sound_max98089: sound-max98089 {
		compatible = "fsl,imx-audio-max98088";
		model = "imx-max98088";
		cpu-dai = <&sai0>;
		audio-codec = <&max98089>;
		asrc-controller = <&asrc0>;
		audio-routing =
			"Headphone Jack", "HPL",
			"Headphone Jack", "HPR",
			"Ext Spk", "SPKL",
			"Ext Spk", "SPKR",
			"LineOut", "RECL",
			"LineOut", "RECR",
			"Mic1", "MIC1",
			"Mic2", "MIC2",
			"LineInA", "INA1",
			"LineInA", "INA2",
			"LineInB", "INB1",
			"LineInB", "INB2";
		status = "disabled";
	};
};

&asrc0 {
	fsl,asrc-rate  = <48000>;
};

&fec1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_fec_mdio>,
		    <&pinctrl_fec1_gpio>,
		    <&pinctrl_fec1>;
	pinctrl-1 = <&pinctrl_fec1_gpio_sleep>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy1>;
	digi,mdio-lt-supply = <&reg_1v8_ext>;
	phy-supply = <&reg_3v3_eth0>;
	phy-reset-gpios = <&lsio_gpio3 18 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <1>;
	digi,phy-reset-in-suspend;
	fsl,magic-packet;
	status = "disabled";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0>;
			at803x,eee-disabled;
			at803x,vddio-1p8v;
		};

		ethphy1: ethernet-phy@1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
			at803x,eee-disabled;
			at803x,vddio-1p8v;
		};
	};
};

&fec2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_fec2_gpio>,
		    <&pinctrl_fec2>;
	pinctrl-1 = <&pinctrl_fec2_gpio_sleep>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	digi,mdio-lt-supply = <&reg_1v8_ext>;
	phy-supply = <&reg_3v3_eth0>;
	phy-reset-gpios = <&lsio_gpio3 22 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <1>;
	digi,phy-reset-in-suspend;
	fsl,magic-packet;
	status = "disabled";
};

/*
 * CAN0
 * Conflicts with LPUART0 RTS/CTS lines.
 * Before enabling the port you need to configure
 * lpuart0 node as 2 wires.
 */
&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&reg_5v_display>;
	status = "disabled";
};

/* CAN1 on expansion header */
&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	xceiver-supply = <&reg_5v_display>;
	stby-gpios = <&lsio_gpio1 0 GPIO_ACTIVE_HIGH>;
	status = "disabled";
};

/*
 * CAN2 on expansion header.
 * Conflicts with LPUART3 RX/TX lines.
 * Requires signal CAN/RS485# (GPIO3_IO23) to be driven high
 */
&flexcan3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan3>,
		    <&pinctrl_flexcan3_lpuart3_gpios>;
	xceiver-supply = <&reg_5v_display>;
	stby-gpios = <&lsio_gpio1 2 GPIO_ACTIVE_HIGH>;
	pinctrl-assert-gpios = <&lsio_gpio3 23 GPIO_ACTIVE_HIGH>;
	status = "disabled";
};

/*
 * FlexSPI port distributed among various interfaces.
 * Conflicts with:
 * - PCIE connector
 * - FEC1
 * - FEC2
 * - RS485
 * - CAN2
 * - MIPI camera
 * - HDMI display
 * - LVDS0 display touch controller
 * - LVDS1 display touch controller
 */
&flexspi0 {
	status = "disabled";
};

/*
 * I2C3 connected to Audio codec and USB 3.0 PD PHY.
 * Also available on:
 * - Expansion header
 * - PCIe connector
 * - Parallel Camera connector
 */
&i2c3 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpi2c3>;
	status = "disabled";

	max98089: codec@10 {
		compatible = "maxim,max98089";
		reg = <0x10>;
		clocks = <&mclkout1_lpcg 0>;
		clock-names = "mclk";
		power-domains = <&pd IMX_SC_R_MCLK_OUT_1>;
		vcc-supply = <&reg_3v3_audio>;
		dvdd-supply = <&reg_1v8_ext>;
		assigned-clocks = <&clk IMX_SC_R_AUDIO_PLL_0 IMX_SC_PM_CLK_PLL>,
				<&clk IMX_SC_R_AUDIO_PLL_0 IMX_SC_PM_CLK_SLV_BUS>,
				<&clk IMX_SC_R_AUDIO_PLL_0 IMX_SC_PM_CLK_MST_BUS>,
				<&mclkout1_lpcg 0>;
		assigned-clock-rates = <786432000>, <49152000>, <12288000>, <12288000>;
		status = "disabled";
	};

	/* CSI Parallel Camera */
	ov5640: ov5640@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_parallel_csi>;
		clocks = <&pi0_misc_lpcg 0>;
		assigned-clocks = <&pi0_misc_lpcg 0>;
		assigned-clock-rates = <24000000>;
		clock-names = "xclk";
		powerdown-gpios = <&lsio_gpio3 2 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&lsio_gpio3 3 GPIO_ACTIVE_LOW>;
		csi_id = <0>;
		mclk = <24000000>;
		mclk_source = <0>;
		status = "disabled";

		port {
			ov5640_ep: endpoint {
				remote-endpoint = <&parallel_csi_ep>;
				bus-type = <5>; /* V4L2_FWNODE_BUS_TYPE_PARALLEL */
				bus-width = <8>;
				vsync-active = <0>;
				hsync-active = <1>;
				pclk-sample = <1>;
			};
		};
	};

	typec_ptn5110: typec@52 {
		compatible = "nxp,ptn5110";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_typec>;
		reg = <0x52>;
		interrupt-parent = <&lsio_gpio4>;
		interrupts = <4 IRQ_TYPE_LEVEL_LOW>;
		status = "okay";

		port {
			typec_dr_sw: endpoint {
				remote-endpoint = <&usb3_drd_sw>;
			};
		};

		usb_con1: connector {
			compatible = "usb-c-connector";
			label = "USB-C";
			power-role = "source";
			data-role = "dual";
			source-pdos = <PDO_FIXED(5000, 3000, PDO_FIXED_USB_COMM)>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@1 {
					reg = <1>;
					typec_con_ss: endpoint {
						remote-endpoint = <&usb3_data_ss>;
					};
				};
			};
		};
	};
};

&cameradev {
	parallel_csi;
};

&parallel_csi {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "disabled";

	port@0 {
		reg = <0>;
		parallel_csi_ep: endpoint {
			remote-endpoint = <&ov5640_ep>;
		};
	};
};

&isi_0 {
	interface = <6 0 2>;	/* INPUT: 6-PARALLEL CSI */
	parallel_csi;
	cap_device {
		status = "okay";
	};
	m2m_device {
		status = "okay";
	};
};

&isi_1 {
	interface = <2 0 2>;	/* INPUT: 2-MIPI CSI0 */
	cap_device {
		status = "okay";
	};
	m2m_device{
		compatible = "imx-isi-m2m";
		status = "okay";
	};
};

&isi_2 {
	interface = <2 0 2>;
	cap_device {
		status = "okay";
	};
};

&isi_3 {
	interface = <2 0 2>;
	cap_device {
		status = "okay";
	};
};

/* MIPI-DSI0 I2C available on LVDS0 connector */
&i2c0_mipi_lvds0 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c0_mipi_lvds0>;
	pinctrl-1 = <&pinctrl_i2c0_lvds0_gpio>;
	scl-gpios = <&lsio_gpio1 25 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&lsio_gpio1 26 GPIO_ACTIVE_HIGH>;
	clock-frequency = <100000>;
	status = "disabled";

	/*
	 * On the CC8X SBC, an inconsistent reset sequence makes
	 * the Goodix display's touch controller respond to two I2C
	 * addresses: 0x14 and 0x5D. To make sure the touchscreen
	 * works every time, the touch controller's description must
	 * be duplicated for both addresses.
	 */
	lvds0_goodix_touch1: gt9271@14 {
		compatible = "goodix,gt9271";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_touch_lvds0>;
		reg = <0x14>;
		/* Interrupt for LVDS0 */
		interrupt-parent = <&lsio_gpio3>;
		interrupts = <20 IRQ_TYPE_EDGE_FALLING>;
		irq-gpios = <&lsio_gpio3 20 GPIO_ACTIVE_HIGH>;
		reload-fw-on-resume;
		skip-firmware-request;
		vin-supply = <&reg_5v_display>;
		touchscreen-size-x = <1280>;
		touchscreen-size-y = <800>;
		status = "disabled";
	};

	lvds0_goodix_touch2: gt9271@5d {
		compatible = "goodix,gt9271";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_touch_lvds0>;
		reg = <0x5D>;
		/* Interrupt for LVDS0 */
		interrupt-parent = <&lsio_gpio3>;
		interrupts = <20 IRQ_TYPE_EDGE_FALLING>;
		irq-gpios = <&lsio_gpio3 20 GPIO_ACTIVE_HIGH>;
		reload-fw-on-resume;
		skip-firmware-request;
		vin-supply = <&reg_5v_display>;
		touchscreen-size-x = <1280>;
		touchscreen-size-y = <800>;
		status = "disabled";
	};

	/* Touch on Fusion 10" display */
	fusion_touch: fusion@14 {
		compatible = "touchrev,fusion-touch";
		reg = <0x14>;
		pinctrl-names = "default";
		interrupt-parent = <&lsio_gpio3>;
		/* LVDS0 interrupt */
		pinctrl-0 = <&pinctrl_touch_lvds0>;
		interrupts = <20 IRQ_TYPE_EDGE_FALLING>;
		/* LVDS1 interrupt */
		//pinctrl-0 = <&pinctrl_touch_lvds1>;
		//interrupts = <19 IRQ_TYPE_EDGE_FALLING>;
		status = "disabled";
	};

	/* HDMI adapter board */
	lt_bridge: lt8912@48 {
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_lt8912>;
		compatible = "lontium,lt8912";
		reg = <0x48>;
		digi,dsi-lanes = <4>;
		vdd1-supply = <&reg_5v_display>;
		no-hpd;
		no-edid;
		status = "disabled";

		port@0 {
			reg = <0>;
			lt8912_0_in: endpoint {
				remote-endpoint = <&mipi0_dsi_out>;
			};
		};

		display-timings {
			native-mode = <&timing1>;

			timing0: timing0 {
				clock-frequency = <74250000>;
				hactive = <1280>;
				vactive = <720>;
				hfront-porch = <110>;
				hsync-len = <40>;
				hback-porch = <220>;
				vfront-porch = <5>;
				vsync-len = <5>;
				vback-porch = <20>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <0>;
				pixelclk-active = <0>;
			};

			timing1: timing1 {
				clock-frequency = <148500000>;
				hactive = <1920>;
				vactive = <1080>;
				hfront-porch = <88>;
				hsync-len = <44>;
				hback-porch = <148>;
				vfront-porch = <36>;
				vsync-len = <5>;
				vback-porch = <4>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <0>;
				pixelclk-active = <0>;
			};
		};
	};
};

/* MIPI-CSI0 I2C available on MIPI Camera connector */
&i2c_mipi_csi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_csi0_lpi2c0>;
	pinctrl-1 = <&pinctrl_csi0_lpi2c0_gpio>;
	scl-gpios = <&lsio_gpio3 6 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&lsio_gpio3 5 GPIO_ACTIVE_HIGH>;
	clock-frequency = <100000>;
	status = "disabled";

	/* MIPI-CSI2 camera */
	ov5640_mipi: ov5640_mipi@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mipi>;
		clocks = <&xtal24m>;
		clock-names = "xclk";
		csi_id = <0>;
		reset-gpios = <&lsio_gpio3 21 GPIO_ACTIVE_LOW>;
		mclk = <24000000>;
		mclk_source = <0>;
		mipi_csi;
		status = "disabled";

		port {
			ov5640_mipi_ep: endpoint {
				remote-endpoint = <&mipi_csi0_ep>;
				data-lanes = <1 2>;
				clocks-lanes = <0>;
			};
		};
	};
};

&mipi_csi_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	/delete-property/virtual-channel;
	status = "disabled";

	/* Camera 0  MIPI CSI-2 (CSIS0) */
	port@0 {
		reg = <0>;
		mipi_csi0_ep: endpoint {
			remote-endpoint = <&ov5640_mipi_ep>;
			data-lanes = <1 2>;
		};
	};
};

&ldb1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lvds0>;
	status = "disabled";

	lvds0: lvds-channel@0 {
		fsl,data-mapping = "jeida";
		fsl,data-width = <24>;
		digi,bits-per-pixel = <16>;
		status = "disabled";

		port@1 {
			reg = <1>;

			lvds0_out: endpoint {
				remote-endpoint = <&panel_lvds0_in>;
			};
		};
	};
};

&ldb1_phy {
	status = "disabled";
};

&mipi0_dsi_host {
	status = "disabled";

	ports {
		port@1 {
			reg = <1>;
			mipi0_dsi_out: endpoint {
				remote-endpoint = <&lt8912_0_in>;
			};
		};
	};
};

/* MIPI-DSI1 I2C available on LVDS1 connector */
&i2c0_mipi_lvds1 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c0_mipi_lvds1>;
	pinctrl-1 = <&pinctrl_i2c0_lvds1_gpio>;
	scl-gpios = <&lsio_gpio1 29 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&lsio_gpio1 30 GPIO_ACTIVE_HIGH>;
	clock-frequency = <100000>;
	status = "disabled";

	/*
	 * On the CC8X SBC, an inconsistent reset sequence makes
	 * the Goodix display's touch controller respond to two I2C
	 * addresses: 0x14 and 0x5D. To make sure the touchscreen
	 * works every time, the touch controller's description must
	 * be duplicated for both addresses.
	 */
	lvds1_goodix_touch1: gt9271@14 {
		compatible = "goodix,gt9271";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_touch_lvds1>;
		reg = <0x14>;
		/* Interrupt for LVDS1 */
		interrupt-parent = <&lsio_gpio3>;
		interrupts = <19 IRQ_TYPE_EDGE_FALLING>;
		irq-gpios = <&lsio_gpio3 19 GPIO_ACTIVE_HIGH>;
		skip-firmware-request;
		status = "disabled";
	};

	lvds1_goodix_touch2: gt9271@5d {
		compatible = "goodix,gt9271";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_touch_lvds1>;
		reg = <0x5D>;
		/* Interrupt for LVDS1 */
		interrupt-parent = <&lsio_gpio3>;
		interrupts = <19 IRQ_TYPE_EDGE_FALLING>;
		irq-gpios = <&lsio_gpio3 19 GPIO_ACTIVE_HIGH>;
		skip-firmware-request;
		status = "disabled";
	};
};

&ldb2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lvds1>;
	status = "disabled";

	lvds1: lvds-channel@0 {
		fsl,data-mapping = "jeida";
		fsl,data-width = <24>;
		digi,bits-per-pixel = <16>;
		status = "disabled";

		port@1 {
			reg = <1>;

			lvds1_out: endpoint {
				remote-endpoint = <&panel_lvds1_in>;
			};
		};
	};
};

&ldb2_phy {
	status = "disabled";
};

/* LPSPI0 on expansion header */
&lpspi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	num-cs = <2>;
	cs-gpios = <&lsio_gpio1 8 GPIO_ACTIVE_LOW>, <&lsio_gpio1 7 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpspi0>;
	status = "disabled";
};

/* LPUART0 on expansion header */
&lpuart0 {
	/* RTS/CTS lines multiplexed with CAN0 */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart0_4wires>;
	status = "disabled";
};

/* Console */
&lpuart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart2>;
	status = "disabled";
};

/*
 * LPUART3 on expansion header.
 * Conflicts with CAN2.
 * Requires signal CAN/RS485# (GPIO3_IO23) to be driven low
 */
&lpuart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart3>,
		    <&pinctrl_flexcan3_lpuart3_gpios>;
	pinctrl-assert-gpios = <&lsio_gpio3 23 GPIO_ACTIVE_LOW>;
	/* Enable RS485 mode */
	linux,rs485-enabled-at-boot-time;
	digi,rts-gpio = <&lsio_gpio3 24 GPIO_ACTIVE_HIGH>;
	status = "disabled";
};

/*&pd_dma_lpuart2 {
	debug_console;
};*/

&dc0_pc {
	status = "okay";
};

&dc0_prg1 {
	status = "okay";
};

&dc0_prg2 {
	status = "okay";
};

&dc0_prg3 {
	status = "okay";
};

&dc0_prg4 {
	status = "okay";
};

&dc0_prg5 {
	status = "okay";
};

&dc0_prg6 {
	status = "okay";
};

&dc0_prg7 {
	status = "okay";
};

&dc0_prg8 {
	status = "okay";
};

&dc0_prg9 {
	status = "okay";
};

/*
 * Remove MCA PWM node that uses MCA_IO5 and MCA_IO6 pads, since these lines
 * are being used as GPIOs for enabling voltage regulators on SBC Pro board.

/delete-node/ &{/i2c@5a800000/mca@63/pwms/pwm@1};*/

&sai0 {
	/*assigned-clocks = <&clk IMX8QXP_AUD_PLL0_DIV>,
			  <&clk IMX8QXP_AUD_ACM_AUD_PLL_CLK0_DIV>,
			  <&clk IMX8QXP_AUD_ACM_AUD_REC_CLK0_DIV>,
			  <&clk IMX8QXP_AUD_SAI_0_MCLK>;*/
	assigned-clock-rates = <786432000>, <49152000>, <12288000>, <49152000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai0>;
	status = "disabled";
};

/* USB_OTG1 connected to usb hub */
&usbotg1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg1>;

	vbus-supply = <&reg_3v3_usb_hub>;
	fsl,reset-gpio = <&lsio_gpio1 3 GPIO_ACTIVE_LOW>;
	dr_mode = "host";
	disable-over-current;
	status = "disabled";
};

&usbotg3_cdns3 {
	dr_mode = "otg";
	usb-role-switch;

	port {
		usb3_drd_sw: endpoint {
			remote-endpoint = <&typec_dr_sw>;
		};
	};
};

/* usbotg3 phy */
&usb3_phy {
	/*
	 * USB 3.0 on TypeC connector only works on SBC Pro versions >= 3.
	 * If using an earlier version of the SBC Pro, comment this line
	 * to have the port work as USB 2.0 on the TypeC connector.
	 */

	 phy-supply = <&reg_3v3_usb_sw>;
};

/* Micro SD card */
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	no-1-8-v;
	cd-gpios = <&lsio_gpio4 22 GPIO_ACTIVE_HIGH>;
	status = "disabled";
};

/* IOMUX */
&iomuxc {
	pinctrl_lpspi0: lpspi0grp {
		fsl,pins = <
			IMX8QXP_SPI0_SCK_ADMA_SPI0_SCK	0x0600004c
			IMX8QXP_SPI0_SDO_ADMA_SPI0_SDO	0x0600004c
			IMX8QXP_SPI0_SDI_ADMA_SPI0_SDI	0x0600004c
			IMX8QXP_SPI0_CS0_LSIO_GPIO1_IO08	0x06000020
			IMX8QXP_SPI0_CS1_LSIO_GPIO1_IO07	0x06000020
		>;
	};

	pinctrl_lpuart0_2wires: lpuart0grp_2wires {
		fsl,pins = <
			IMX8QXP_UART0_RX_ADMA_UART0_RX		0x06000020
			IMX8QXP_UART0_TX_ADMA_UART0_TX		0x06000020
		>;
	};

	pinctrl_lpuart0_4wires: lpuart0grp_4wires {
		fsl,pins = <
			IMX8QXP_UART0_RX_ADMA_UART0_RX		0x06000020
			IMX8QXP_UART0_TX_ADMA_UART0_TX		0x06000020
			IMX8QXP_FLEXCAN0_RX_ADMA_UART0_RTS_B	0x06000020
			IMX8QXP_FLEXCAN0_TX_ADMA_UART0_CTS_B	0x06000020
		>;
	};

	pinctrl_lpuart2: lpuart2grp {
		fsl,pins = <
			IMX8QXP_UART2_TX_ADMA_UART2_TX	0x06000020
			IMX8QXP_UART2_RX_ADMA_UART2_RX	0x06000020
		>;
	};

	pinctrl_lpuart3: lpuart3grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN2_TX_ADMA_UART3_TX		0x06000020
			IMX8QXP_FLEXCAN2_RX_ADMA_UART3_RX		0x06000020
			/* RS485 RE#/DE line */
			IMX8QXP_QSPI0B_SS1_B_LSIO_GPIO3_IO24	0x06000040
		>;
	};

	pinctrl_lvds0: lvds0grp {
		fsl,pins = <
			/* LVDS0 PWM backlight */
			IMX8QXP_MIPI_DSI0_GPIO0_00_MIPI_DSI0_PWM0_OUT	0x00000020
		>;
	};

	pinctrl_lvds1: lvds1grp {
		fsl,pins = <
			/* LVDS1 PWM backlight */
			IMX8QXP_MIPI_DSI1_GPIO0_00_MIPI_DSI1_PWM0_OUT 0x00000020
		>;
	};

	/* Ethernet PHYs regulator */
	pinctrl_reg_3v3_eth0: pinctrl_reg_3v3_eth0grp {
		fsl,pins = <
			/* PHY power */
			IMX8QXP_QSPI0A_DQS_LSIO_GPIO3_IO13		0x06000021
		>;
	};

	pinctrl_reg_3v3_eth0_sleep: pinctrl_reg_3v3_eth0grp_sleep {
		fsl,pins = <
			/* PHY power (lp_config=LATCH) */
			IMX8QXP_QSPI0A_DQS_LSIO_GPIO3_IO13		0x07800021
		>;
	};

	/* FEC shared MDIO bus */
	pinctrl_fec_mdio: fecmdiogrp {
		fsl,pins = <
			IMX8QXP_ENET0_MDC_CONN_ENET0_MDC		0x06000020
			IMX8QXP_ENET0_MDIO_CONN_ENET0_MDIO		0x06000020
		>;
	};

	pinctrl_fec1_gpio: fec1gpiogrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DATA0_LSIO_GPIO3_IO18	0x06000021
			/* PHY interrupt */
			IMX8QXP_MIPI_DSI0_GPIO0_01_LSIO_GPIO1_IO28	0x06000021
		>;
	};

	pinctrl_fec1_gpio_sleep: fec1gpiosleepgrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DATA0_LSIO_GPIO3_IO18	0x06000041
		>;
	};

	pinctrl_fec1: fec1grp {
		fsl,pins = <
			/*
			 * The SCFW of B0 defaults ENET0 domains to 2.5V:
			 * - VDD_ENET0_1P8_2P5_3P3
			 * - VDD_ENET0_VSELECT_1P8_2P5_3P3
			 * Turn the domains back to 1.8/3.3V detector
			 */
			IMX8QXP_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB0_PAD	0x000014a0
			IMX8QXP_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB1_PAD	0x000014a0

			IMX8QXP_ENET0_RGMII_TX_CTL_CONN_ENET0_RGMII_TX_CTL	0x00000061
			IMX8QXP_ENET0_RGMII_TXC_CONN_ENET0_RGMII_TXC	0x00000061
			IMX8QXP_ENET0_RGMII_TXD0_CONN_ENET0_RGMII_TXD0	0x00000061
			IMX8QXP_ENET0_RGMII_TXD1_CONN_ENET0_RGMII_TXD1	0x00000061
			IMX8QXP_ENET0_RGMII_TXD2_CONN_ENET0_RGMII_TXD2	0x00000061
			IMX8QXP_ENET0_RGMII_TXD3_CONN_ENET0_RGMII_TXD3	0x00000061
			IMX8QXP_ENET0_RGMII_RXC_CONN_ENET0_RGMII_RXC	0x00000061
			IMX8QXP_ENET0_RGMII_RX_CTL_CONN_ENET0_RGMII_RX_CTL	0x00000061
			IMX8QXP_ENET0_RGMII_RXD0_CONN_ENET0_RGMII_RXD0	0x00000061
			IMX8QXP_ENET0_RGMII_RXD1_CONN_ENET0_RGMII_RXD1	0x00000061
			IMX8QXP_ENET0_RGMII_RXD2_CONN_ENET0_RGMII_RXD2	0x00000061
			IMX8QXP_ENET0_RGMII_RXD3_CONN_ENET0_RGMII_RXD3	0x00000061
		>;
	};

	pinctrl_fec2_gpio: fec2gpiogrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DQS_LSIO_GPIO3_IO22		0x06000021
			/* PHY interrupt */
			IMX8QXP_MIPI_DSI1_GPIO0_01_LSIO_GPIO2_IO00	0x06000021
		>;
	};

	pinctrl_fec2_gpio_sleep: fec2gpiosleepgrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DQS_LSIO_GPIO3_IO22		0x06000041
		>;
	};

	pinctrl_fec2: fec2grp {
		fsl,pins = <
			/*
			 * The SCFW of B0 defaults ENET1 domain to 2.5V:
			 * - VDD_ESAI_SPDIF_1P8_2P5_3P3
			 * Turn the domain back to 1.8/3.3V detector
			 */
			IMX8QXP_COMP_CTL_GPIO_1V8_3V3_GPIORHB_PAD		0x000514a0

			IMX8QXP_ESAI0_SCKR_CONN_ENET1_RGMII_TX_CTL		0x00000060
			IMX8QXP_ESAI0_FSR_CONN_ENET1_RGMII_TXC		0x00000060
			IMX8QXP_ESAI0_TX4_RX1_CONN_ENET1_RGMII_TXD0	0x00000060
			IMX8QXP_ESAI0_TX5_RX0_CONN_ENET1_RGMII_TXD1	0x00000060
			IMX8QXP_ESAI0_FST_CONN_ENET1_RGMII_TXD2		0x00000060
			IMX8QXP_ESAI0_SCKT_CONN_ENET1_RGMII_TXD3		0x00000060
			IMX8QXP_ESAI0_TX0_CONN_ENET1_RGMII_RXC		0x00000060
			IMX8QXP_SPDIF0_TX_CONN_ENET1_RGMII_RX_CTL		0x00000060
			IMX8QXP_SPDIF0_RX_CONN_ENET1_RGMII_RXD0		0x00000060
			IMX8QXP_ESAI0_TX3_RX2_CONN_ENET1_RGMII_RXD1	0x00000060
			IMX8QXP_ESAI0_TX2_RX3_CONN_ENET1_RGMII_RXD2	0x00000060
			IMX8QXP_ESAI0_TX1_CONN_ENET1_RGMII_RXD3		0x00000060
		>;
	};

	pinctrl_flexcan1: flexcan0grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN0_TX_ADMA_FLEXCAN0_TX		0x21
			IMX8QXP_FLEXCAN0_RX_ADMA_FLEXCAN0_RX		0x21
		>;
	};

	pinctrl_flexcan2: flexcan1grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN1_TX_ADMA_FLEXCAN1_TX		0x21
			IMX8QXP_FLEXCAN1_RX_ADMA_FLEXCAN1_RX		0x21
			IMX8QXP_SPI2_CS0_LSIO_GPIO1_IO00                   0x06000020
		>;
	};

	pinctrl_flexcan3: flexcan2grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN2_TX_ADMA_FLEXCAN2_TX		0x21
			IMX8QXP_FLEXCAN2_RX_ADMA_FLEXCAN2_RX		0x21
			IMX8QXP_SPI2_SDI_LSIO_GPIO1_IO02                   0x06000020
		>;
	};

	pinctrl_flexcan3_lpuart3_gpios: flexcan2lpuart3gpios-grp {
		fsl,pins = <
			IMX8QXP_QSPI0B_SS0_B_LSIO_GPIO3_IO23 0x06000060
		>;
	};

	pinctrl_flexspi0: flexspi0grp {
		fsl,pins = <
			IMX8QXP_QSPI0B_SCLK_LSIO_QSPI0B_SCLK       0x06000021
			IMX8QXP_QSPI0B_DATA0_LSIO_QSPI0B_DATA0     0x06000021
			IMX8QXP_QSPI0B_DATA1_LSIO_QSPI0B_DATA1     0x06000021
			IMX8QXP_QSPI0B_DATA2_LSIO_QSPI0B_DATA2     0x06000021
			IMX8QXP_QSPI0B_DATA3_LSIO_QSPI0B_DATA3     0x06000021
			IMX8QXP_QSPI0B_DQS_LSIO_QSPI0B_DQS         0x06000021
			IMX8QXP_QSPI0B_SS0_B_LSIO_QSPI0B_SS0_B     0x06000021
			IMX8QXP_QSPI0B_SS1_B_LSIO_QSPI0B_SS1_B     0x06000021
		>;
	};

	pinctrl_i2c0_mipi_lvds0: mipi_lvds0_i2c0_grp {
		fsl,pins = <
			IMX8QXP_MIPI_DSI0_I2C0_SCL_MIPI_DSI0_I2C0_SCL 0xc6000020
			IMX8QXP_MIPI_DSI0_I2C0_SDA_MIPI_DSI0_I2C0_SDA 0xc6000020
		>;
	};

	pinctrl_i2c0_lvds0_gpio: i2c0_lvds0_gpio_grp {
		fsl,pins = <
			IMX8QXP_MIPI_DSI0_I2C0_SCL_LSIO_GPIO1_IO25 0xc6000020
			IMX8QXP_MIPI_DSI0_I2C0_SDA_LSIO_GPIO1_IO26 0xc6000020
		>;
	};

	pinctrl_i2c0_mipi_lvds1: mipi_lvds1_i2c0_grp {
		fsl,pins = <
			IMX8QXP_MIPI_DSI1_I2C0_SCL_MIPI_DSI1_I2C0_SCL 0xc6000020
			IMX8QXP_MIPI_DSI1_I2C0_SDA_MIPI_DSI1_I2C0_SDA 0xc6000020
		>;
	};

	pinctrl_i2c0_lvds1_gpio: i2c0_lvds1_gpio_grp {
		fsl,pins = <
			IMX8QXP_MIPI_DSI1_I2C0_SCL_LSIO_GPIO1_IO29 0xc6000020
			IMX8QXP_MIPI_DSI1_I2C0_SDA_LSIO_GPIO1_IO30 0xc6000020
		>;
	};

	pinctrl_csi0_lpi2c0: csi0lpi2c0grp {
		fsl,pins = <
			IMX8QXP_MIPI_CSI0_I2C0_SCL_MIPI_CSI0_I2C0_SCL	0xc2000020
			IMX8QXP_MIPI_CSI0_I2C0_SDA_MIPI_CSI0_I2C0_SDA	0xc2000020
		>;
	};

	pinctrl_csi0_lpi2c0_gpio: csi0lpi2c0gpiogrp {
		fsl,pins = <
			IMX8QXP_MIPI_CSI0_I2C0_SCL_LSIO_GPIO3_IO05	0xc2000020
			IMX8QXP_MIPI_CSI0_I2C0_SDA_LSIO_GPIO3_IO06	0xc2000020
		>;
	};

	pinctrl_lpi2c3: lpi2c3grp {
		fsl,pins = <
			IMX8QXP_SPI3_CS1_ADMA_I2C3_SCL	0x06000020
			IMX8QXP_MCLK_IN1_ADMA_I2C3_SDA	0x06000020
		>;
	};

	pinctrl_lt8912: lt8912grp {
		fsl,pins = <
			/* HDMI/HDP interrupt */
			IMX8QXP_QSPI0B_DATA2_LSIO_GPIO3_IO20		0x06000020
			/* HDMI reset */
			IMX8QXP_MIPI_DSI0_GPIO0_00_LSIO_GPIO1_IO27	0x06000020
		>;
	};

	pinctrl_parallel_csi: parallelcsigrp {
		fsl,pins = <
			IMX8QXP_CSI_D00_CI_PI_D02		0xC0000041
			IMX8QXP_CSI_D01_CI_PI_D03		0xC0000041
			IMX8QXP_CSI_D02_CI_PI_D04		0xC0000041
			IMX8QXP_CSI_D03_CI_PI_D05		0xC0000041
			IMX8QXP_CSI_D04_CI_PI_D06		0xC0000041
			IMX8QXP_CSI_D05_CI_PI_D07		0xC0000041
			IMX8QXP_CSI_D06_CI_PI_D08		0xC0000041
			IMX8QXP_CSI_D07_CI_PI_D09		0xC0000041

			IMX8QXP_CSI_MCLK_CI_PI_MCLK	0xC0000041
			IMX8QXP_CSI_PCLK_CI_PI_PCLK	0xC0000041
			IMX8QXP_CSI_HSYNC_CI_PI_HSYNC	0xC0000041
			IMX8QXP_CSI_VSYNC_CI_PI_VSYNC	0xC0000041
			/* CSI Camera enable */
			IMX8QXP_CSI_EN_LSIO_GPIO3_IO02	0xC0000041
			/* CSI Camera reset */
			IMX8QXP_CSI_RESET_LSIO_GPIO3_IO03	0xC0000041
		>;
	};

	/* PCIE (Mini Card) */
	pinctrl_pcieb_mini_card: pcieagrp_mini_card {
		fsl,pins = <
			/* PCIE_RESET_N */
			IMX8QXP_QSPI0A_SCLK_LSIO_GPIO3_IO16	0x06000021
			/* PCIE_DIS_N */
			IMX8QXP_SAI1_RXC_LSIO_GPIO0_IO30		0x06000061
			/* PCIE_WAKE_N */
			IMX8QXP_SAI1_RXD_LSIO_GPIO0_IO29		0x04000021
		>;
	};

	pinctrl_reg_3v3_aud: reg_3v3_aud_grp {
		fsl,pins = <
			/* Audio power enable */
			IMX8QXP_SPI3_SDO_LSIO_GPIO0_IO14		0x06000020
		>;
	};

	pinctrl_reg_5v_display: reg_5v_display_grp {
		fsl,pins = <
			/* 5V regulator power enable */
			IMX8QXP_SPI3_SCK_LSIO_GPIO0_IO13		0x06000020
		>;
	};

	pinctrl_reg_5v_display_sleep: reg_5v_display_grp_sleep {
		fsl,pins = <
			/* 5V regulator power enable, latch */
			IMX8QXP_SPI3_SCK_LSIO_GPIO0_IO13		0x07800020
		>;
	};

	pinctrl_reg_3v3_pcie: reg_3v3_pcie_grp {
		fsl,pins = <
			/* Voltage for PCIe domain (PCIE_VCC_EN) */
			IMX8QXP_SAI1_RXFS_LSIO_GPIO0_IO31		0x06000021
		>;
	};

	pinctrl_reg_3v3_pcie_sleep: reg_3v3_pcie_sleep_grp {
		fsl,pins = <
			/* PCIE_VCC_EN (lp_config=LATCH) */
			IMX8QXP_SAI1_RXFS_LSIO_GPIO0_IO31          0x07800021
		>;
	};

	pinctrl_reg_3v3_usb_hub: reg_3v3_usb_hub_grp {
		fsl,pins = <
			/* GPIO0_15 USB hub power enable */
			IMX8QXP_SPI3_SDI_LSIO_GPIO0_IO15		0x06000020
		>;
	};

	pinctrl_reg_3v3_usb_sw: reg_3v3_usb_sw_grp {
		fsl,pins = <
			/* GPIO4_5 USB3 switch power enable */
			IMX8QXP_USB_SS3_TC2_LSIO_GPIO4_IO05	0x06000020
		>;
	};

	pinctrl_sai0: sai0grp {
		fsl,pins = <
			IMX8QXP_SAI0_RXD_ADMA_SAI0_RXD		0x06000040
			IMX8QXP_SAI0_TXD_ADMA_SAI0_TXD		0x06000060
			IMX8QXP_SAI0_TXFS_ADMA_SAI0_TXFS		0x06000040
			IMX8QXP_SAI0_TXC_ADMA_SAI0_TXC		0x06000040
			IMX8QXP_SPI3_CS0_ADMA_ACM_MCLK_OUT1	0x06000040
		>;
	};

	pinctrl_usbotg1: usbotg1grp {
		fsl,pins = <
			/* USB hub reset */
			IMX8QXP_SPI2_SCK_LSIO_GPIO1_IO03		0x06000020
		>;
	};

	pinctrl_typec_mux: typecmuxgrp {
		fsl,pins = <
			/* USB3 switch bus selector (SEL) */
			IMX8QXP_USB_SS3_TC3_LSIO_GPIO4_IO06	0x06000021
		>;
	};

	pinctrl_typec: typecgrp {
		fsl,pins = <
			/* PTN5110 irq line (ALERT) */
			IMX8QXP_USB_SS3_TC1_LSIO_GPIO4_IO04	0x06000021
			/* PTN5110 debug irq (DBG_ACC) */
			IMX8QXP_USB_SS3_TC0_LSIO_GPIO4_IO03	0x06000021
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2gpiogrp {
		fsl,pins = <
			/* Card detect */
			IMX8QXP_USDHC1_CD_B_LSIO_GPIO4_IO22	0x06000021
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	pinctrl_mipi: mipi {
		fsl,pins = <
			IMX8QXP_QSPI0B_DATA3_LSIO_GPIO3_IO21 0xC0000041
		>;
	};

	pinctrl_touch_lvds0: touchgrplvds0 {
		fsl,pins = <
			/* LVDS0 touch interrupt */
			IMX8QXP_QSPI0B_DATA2_LSIO_GPIO3_IO20	0x06000060
		>;
	};

	pinctrl_touch_lvds1: touchgrplvds1 {
		fsl,pins = <
			/* LVDS1 touch interrupt */
			IMX8QXP_QSPI0B_DATA1_LSIO_GPIO3_IO19	0x06000060
		>;
	};
};
