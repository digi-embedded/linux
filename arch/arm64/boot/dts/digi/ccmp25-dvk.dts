// SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause)
/*
 * Copyright 2024, Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/dts-v1/;

/* STM32MP25 CPU */
#include "../st/stm32mp257.dtsi"
#include "../st/stm32mp25xf.dtsi"
#include "../st/stm32mp25-pinctrl.dtsi"
#include "../st/stm32mp25xxai-pinctrl.dtsi"
/* Digi ConnectCore MP25 (SOM) */
#include "ccmp25.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/regulator/st,stm32mp25-regulator.h>

/ {
	model = "Digi International ConnectCore MP25 Development Kit";
	compatible = "digi,ccmp25-dvk", "digi,ccmp25", "st,stm32mp257";

	aliases {
		ethernet0 = &eth2;
		ethernet1 = &eth1;
		serial2 = &uart5; /* Console M33 / XBEE */
		serial3 = &usart6; /* Connector J41 */
		serial4 = &uart7; /* MikroBus UART */
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	clocks {
		clk_ext_camera: clk-ext-camera {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <24000000>;
		};

		pad_clk: pad-clk {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <100000000>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		button-user-1 {
			label = "User-1";
			linux,code = <BTN_1>;
			gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
			status = "okay";
		};
	};

	gpio-leds {
		compatible = "gpio-leds";

		led-blue {
			function = LED_FUNCTION_HEARTBEAT;
			color = <LED_COLOR_ID_BLUE>;
			gpios = <&gpioj 7 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
	};

	panel_dsi_backlight: panel-dsi-backlight {
		compatible = "gpio-backlight";
		gpios = <&gpioi 5 GPIO_ACTIVE_LOW>;
		default-on;
		default-brightness-level = <0>;
		status = "disabled";
	};

	panel_lvds: panel-lvds {
		compatible = "edt,etml0700z9ndha", "panel-lvds";
		enable-gpios = <&gpiog 15 GPIO_ACTIVE_HIGH>;
		backlight = <&panel_lvds_backlight>;
		status = "okay";

		width-mm = <156>;
		height-mm = <92>;
		data-mapping = "vesa-24";

		panel-timing {
			clock-frequency = <54000000>;
			hactive = <1024>;
			vactive = <600>;
			hfront-porch = <150>;
			hback-porch = <150>;
			hsync-len = <21>;
			vfront-porch = <24>;
			vback-porch = <24>;
			vsync-len = <21>;
		};

		port {
			lvds_panel_in: endpoint {
				remote-endpoint = <&lvds_out0>;
			};
		};
	};

	panel_lvds_backlight: panel-lvds-backlight {
		compatible = "gpio-backlight";
		gpios = <&gpioi 5 GPIO_ACTIVE_HIGH>;
		default-on;
		default-brightness-level = <0>;
		status = "okay";
	};

	sound: sound {
		compatible = "audio-graph-card";
		label = "STM32MP25-EV1";
		dais = <&i2s2_port>;
		status = "disabled";
	};
};

&combophy {
	clocks = <&rcc CK_BUS_USB3PCIEPHY>, <&rcc CK_KER_USB3PCIEPHY>, <&pad_clk>;
	clock-names = "apb-clk", "ker-clk", "pad-clk";
	status = "okay";
};


&csi2host {
	status = "okay";
	ports {
		#address-cells = <1>;
		#size-cells = <0>;
		port@0 {
			reg = <0>;
			csi2host_sink: endpoint {
				remote-endpoint = <&imx335_ep>;
				data-lanes = <0 1>;
				bus-type = <4>;
			};
		};
		port@1 {
			reg = <1>;
			csi2host_source: endpoint {
				remote-endpoint = <&dcmipp_0>;
			};
		};
	};
};

&dcmipp {
	status = "okay";
	port {
		dcmipp_0: endpoint {
			remote-endpoint = <&csi2host_source>;
			bus-type = <4>;
		};
	};
};

&dsi {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "disabled";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			dsi_in: endpoint {
				remote-endpoint = <&ltdc_ep0_out>;
			};
		};

		port@1 {
			reg = <1>;
			dsi_out1: endpoint {
				remote-endpoint = <&adv7535_in>;
			};
		};
	};
};

&eth1 {
	status = "okay";
	pinctrl-0 = <&eth1_mdio_pins_a>;
	pinctrl-names = "default";
	phy-mode = "rgmii";
	max-speed = <1000>;
	st,eth-clk-sel;

	fixed_link: fixed-link {
		speed = <1000>;
		full-duplex;
	};

	/* ETH1 and ETH3 shared the mdio bus ETH1_MDIO */
	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";

		phy1_eth1: ethernet-phy@0 {
			compatible = "ethernet-phy-id0141.0dd0"; /* PHY ID for Marvell 88E1512 */
			reset-gpios =  <&gpiob 3 GPIO_ACTIVE_LOW>; /* ETH1_RST */
			reset-assert-us = <1000>;
			reset-deassert-us = <2000>;
			reg = <0>;
		};

		phy2_eth1: ethernet-phy@2 {
			compatible = "ethernet-phy-id0141.0dd0"; /* PHY ID for Marvell 88E1512 */
			reset-gpios =  <&gpiob 15 GPIO_ACTIVE_LOW>; /* ETH3_RST */
			reset-assert-us = <1000>;
			reset-deassert-us = <2000>;
			reg = <2>;
		};
	};
};

&eth2 {
	status = "okay";
	pinctrl-0 = <&eth2_rgmii_pins_a>;
	pinctrl-names = "default";
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy1_eth2>;
	st,eth-ptp-from-rcc;

	/* ETH2 connected to mdio bus ETH2_MDIO */
	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy1_eth2: ethernet-phy@1 {
			compatible = "ethernet-phy-id0141.0dd0"; /* PHY ID for Marvell 88E1512 */
			reset-gpios =  <&gpiob 6 GPIO_ACTIVE_LOW>; /* ETH2_RST */
			reset-assert-us = <1000>;
			reset-deassert-us = <2000>;
			reg = <1>;
		};
	};
};

&i2c2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c2_pins_a>;
	pinctrl-1 = <&i2c2_sleep_pins_a>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	clock-frequency = <100000>;
	status = "okay";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;

	imx335: imx335@1a {
		compatible = "sony,imx335";
		reg = <0x1a>;
		clocks = <&clk_ext_camera>;
		reset-gpios = <&gpioi 7 (GPIO_ACTIVE_HIGH | GPIO_PUSH_PULL)>;
		powerdown-gpios = <&gpioi 0 (GPIO_ACTIVE_HIGH | GPIO_PUSH_PULL)>;
		status = "okay";

		port {
			imx335_ep: endpoint {
				remote-endpoint = <&csi2host_sink>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
				link-frequencies = /bits/ 64 <594000000>;
			};
		};
	};

	adv7535: hdmi@3d {
		compatible = "adi,adv7535";
		reg = <0x3d>, <0x3c>, <0x3f>, <0x38>;
		reg-names = "main", "cec", "edid", "packet";
		status = "disabled";
		adi,dsi-lanes = <4>;
		reset-gpios = <&gpiog 14 GPIO_ACTIVE_LOW>;
		avdd-supply = <&scmi_v3v3>;
		dvdd-supply = <&scmi_v3v3>;
		pvdd-supply = <&scmi_v3v3>;
		a2vdd-supply = <&scmi_v3v3>;
		v3p3-supply = <&scmi_v3v3>;
		v1p2-supply = <&scmi_v3v3>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				adv7535_in: endpoint {
					remote-endpoint = <&dsi_out1>;
				};
			};

			port@2 {
				reg = <2>;
				adv7535_tx_endpoint: endpoint {
					remote-endpoint = <&i2s2_endpoint>;
				};
			};
		};
	};

	ili2511: ili2511@41 {
		compatible = "ilitek,ili251x";
		reg = <0x41>;
		interrupt-parent = <&gpioi>;
		interrupts = <13 IRQ_TYPE_EDGE_FALLING>;
		reset-gpios = <&gpiog 14 GPIO_ACTIVE_LOW>;
		status = "okay";
	};
};

&i2s2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2s2_pins_a>;
	pinctrl-1 = <&i2s2_sleep_pins_a>;
	status = "disabled";

	i2s2_port: port {
		i2s2_endpoint: endpoint {
			remote-endpoint = <&adv7535_tx_endpoint>;
			format = "i2s";
			mclk-fs = <256>;
		};
	};
};

&ltdc {
	rotation-memory = <&ltdc_sec_rotation>;
	status = "okay";

	port {
		#address-cells = <1>;
		#size-cells = <0>;

		ltdc_ep0_out: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&dsi_in>;
		};

		ltdc_ep1_out: endpoint@1 {
			reg = <1>;
			remote-endpoint = <&lvds_in>;
		};
	};
};

&lvds {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			lvds_in: endpoint {
				remote-endpoint = <&ltdc_ep1_out>;
			};
		};

		port@1 {
			reg = <1>;
			lvds_out0: endpoint {
				remote-endpoint = <&lvds_panel_in>;
			};
		};
	};
};

&m_can1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&m_can1_pins_a>;
	pinctrl-1 = <&m_can1_sleep_pins_a>;
	status = "okay";
};

&m_can3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&m_can3_pins_a>;
	pinctrl-1 = <&m_can3_sleep_pins_a>;
	status = "okay";
};

&mlahb {
	intc_rpmsg: interrupt-controller@1 {
		compatible = "rpmsg,intc";
		reg = <1 0>;
		#interrupt-cells = <1>;
		interrupt-controller;
	};

	i2c_rpmsg: i2c@2 {
		compatible = "rpmsg,i2c-controller";
		reg = <2 0>;
		rpmsg,dev-id = "rpmsg_i2c";
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		typec@35 {
			compatible = "st,stm32mp25-typec";
			reg = <0x35>;
			interrupts-extended = <&intc_rpmsg 0>;
			status = "okay";
			connector {
				compatible = "usb-c-connector";
				label = "USB-C";

				port {
					typec_ep: endpoint {
						remote-endpoint = <&dwc3_ep>;
					};
				};
			};
		};
	};
};

&ommanager {
	memory-region = <&mm_ospi1>;
	memory-region-names = "mm_ospi1";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ospi1_clk_pins_a
		     &ospi1_io03_pins_a
		     &ospi1_cs0_pins_a>;

	pinctrl-1 = <&ospi1_clk_sleep_pins_a
		     &ospi1_io03_sleep_pins_a
		     &ospi1_cs0_sleep_pins_a>;

	status = "okay";

	spi@40430000 {
		#address-cells = <1>;
		#size-cells = <0>;
		memory-region = <&mm_ospi1>;
		status = "okay";

		flash0: flash@0 {
			compatible = "jedec,spi-nor";
			reg = <0>;
			spi-rx-bus-width = <4>;
			spi-tx-bus-width = <4>;
			spi-max-frequency = <84000000>;
		};
	};
};

&pcie_ep {
	pinctrl-names = "default", "init";
	pinctrl-0 = <&pcie_pins_a>;
	pinctrl-1 = <&pcie_init_pins_a>;
	reset-gpios = <&gpioj 8 GPIO_ACTIVE_LOW>;
	status = "disabled";
};

&pcie_rc {
	pinctrl-names = "default", "init";
	pinctrl-0 = <&pcie_pins_a>;
	pinctrl-1 = <&pcie_init_pins_a>;
	reset-gpios = <&gpioj 8 GPIO_ACTIVE_LOW>;
	status = "okay";
};

/* Micro SD */
&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpiod 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&reg_3v3_board>; /* card's VDD pin */
	vqmmc-supply = <&scmi_vddio_sdcard>; /* voltage used to pull up signal lines */
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-ddr50;
	sd-uhs-sdr104;
	status = "okay";
};

&spi3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi3_pins_a>;
	pinctrl-1 = <&spi3_sleep_pins_a>;
	status = "disabled";
};

&spi8 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi8_pins_a>;
	pinctrl-1 = <&spi8_sleep_pins_a>;
	status = "disabled";
};

/* ETH1 and ETH3 */
&switch0 {
	status = "okay";
	pinctrl-0 = <&eth1_rgmii_pins_a>, <&eth3_rgmii_pins_a>;
	pinctrl-names = "default";
	phy-mode = "rgmii";
	st,ethsw-internal-125;
};

/* Console A35 */
&usart2 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&usart2_pins_a>;
	pinctrl-1 = <&usart2_idle_pins_a>;
	pinctrl-2 = <&usart2_sleep_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

/* Console M33 / XBEE */
&uart5 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&ccmp25_uart5_pins &ccmp25_uart5_rtscts_pins>;
	pinctrl-1 = <&ccmp25_uart5_idle_pins &ccmp25_uart5_rtscts_idle_pins>;
	pinctrl-2 = <&ccmp25_uart5_sleep_pins &ccmp25_uart5_rtscts_sleep_pins>;
	uart-has-rtscts;
	status = "okay";
};

/* Connector J8 */
&usart6 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&usart6_pins_a>;
	pinctrl-1 = <&usart6_idle_pins_a>;
	pinctrl-2 = <&usart6_sleep_pins_a>;
	uart-has-rtscts;
	status = "disabled";
};

/* MikroBus UART */
&uart7 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&ccmp25_uart7_pins>;
	pinctrl-1 = <&ccmp25_uart7_idle_pins>;
	pinctrl-2 = <&ccmp25_uart7_sleep_pins>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&usb2_phy1 {
	status = "okay";
};

&usb2_phy2 {
	status = "okay";
};

&usb2h {
	status = "okay";

	usb2h_ohci: usb@482e0000 {
		status = "disabled";
	};
};

&usb3dr {
	status = "okay";

	dwc3: usb@48300000 {
		maximum-speed = "high-speed";
		usb-role-switch;
		port {
			dwc3_ep: endpoint {
				remote-endpoint = <&typec_ep>;
			};
		};
	};
};

&pinctrl {
	ccmp25_uart5_pins: ccmp25-uart5-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 9, AF5)>; /* UART5_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 10, AF5)>; /* UART5_RX */
			bias-disable;
		};
	};

	ccmp25_uart5_idle_pins: ccmp25-uart5-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 9, ANALOG)>; /* UART5_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 10, AF5)>; /* UART5_RX */
			bias-disable;
		};
	};

	ccmp25_uart5_sleep_pins: ccmp25-uart5-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 9, ANALOG)>, /* UART5_TX */
				 <STM32_PINMUX('G', 10, ANALOG)>; /* UART5_RX */
		};
	};

	ccmp25_uart5_rtscts_pins: ccmp25-uart5-rtscts-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 8, AF5)>;  /* UART5_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('I', 5, AF5)>; /* UART5_CTS */
			bias-pull-up;
		};
	};

	ccmp25_uart5_rtscts_idle_pins: ccmp25-uart5-rtscts-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('I', 5, ANALOG)>; /* UART5_CTS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 8, AF5)>; /* UART5_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	ccmp25_uart5_rtscts_sleep_pins: ccmp25-uart5-rtscts-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 8, ANALOG)>, /* UART5_RTS */
				 <STM32_PINMUX('I', 5, ANALOG)>; /* UART5_CTS */
		};
	};

	ccmp25_uart7_pins: ccmp25-uart7-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 3, AF6)>; /* UART7_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 0, AF6)>; /* UART7_RX */
			bias-disable;
		};
	};

	ccmp25_uart7_idle_pins: ccmp25-uart7-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 3, ANALOG)>; /* UART7_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 0, AF6)>; /* UART7_RX */
			bias-disable;
		};
	};

	ccmp25_uart7_sleep_pins: ccmp25-uart7-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('D', 3, ANALOG)>, /* UART7_TX */
				 <STM32_PINMUX('D', 0, ANALOG)>; /* UART7_RX */
		};
	};
};
