// SPDX-License-Identifier: (GPL-2.0-or-later OR BSD-3-Clause)
/*
 * Copyright 2024, Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/dts-v1/;

/* STM32MP25 CPU */
#include "../st/stm32mp257.dtsi"
#include "../st/stm32mp25xf.dtsi"
#include "../st/stm32mp25-pinctrl.dtsi"
#include "../st/stm32mp25xxai-pinctrl.dtsi"
/* Digi ConnectCore MP25 (SOM) */
#include "ccmp25.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/regulator/st,stm32mp25-regulator.h>
#include "dt-bindings/pwm/pwm.h"

/ {
	model = "Digi International ConnectCore MP25 Development Kit";
	compatible = "digi,ccmp25-dvk", "digi,ccmp25", "st,stm32mp257";

	aliases {
		ethernet0 = &eth2;
		ethernet1 = &eth1;
		serial2 = &uart5; /* Console M33 / XBEE */
		serial3 = &usart6; /* Connector J41 */
		serial4 = &uart7; /* MikroBus UART */
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	clocks {
		clk_ext_camera: clk-ext-camera {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <24000000>;
		};

		pad_clk: pad-clk {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <100000000>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		button-user-1 {
			label = "User-1";
			linux,code = <BTN_1>;
			gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
			status = "okay";
		};
	};

	gpio-leds {
		compatible = "gpio-leds";

		led-blue {
			function = LED_FUNCTION_HEARTBEAT;
			color = <LED_COLOR_ID_BLUE>;
			gpios = <&gpioj 7 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
	};

	panel_dsi_backlight: panel-dsi-backlight {
		compatible = "gpio-backlight";
		gpios = <&gpioi 5 GPIO_ACTIVE_LOW>;
		default-on;
		default-brightness-level = <0>;
		status = "disabled";
	};

	display_bl: display-bl {
		compatible = "pwm-backlight";
		/* node TIM20_CH4 period (ns) */
		pwms = <&pwm_lvds_bckl 3 500000 PWM_POLARITY_INVERTED>;
		brightness-levels = <0 16 22 30 40 55 75 102 138 188 255>;
		default-brightness-level = <8>;
		power-supply = <&reg_5v_board>;
		status = "disabled";
	};

	panel_lvds: panel-lvds {
		compatible = "auo,g101evn010", "panel-lvds";
		power-supply = <&reg_5v_board>;
		/*backlight = <&panel_lvds_backlight>;*/
		backlight = <&display_bl>;
		status = "disabled";

		width-mm = <216>;
		height-mm = <135>;
		data-mapping = "jeida-24";

		panel-timing {
			clock-frequency = <54000000>;
			hactive = <1280>;
			vactive = <800>;
			hfront-porch = <82>;
			hback-porch = <84>;
			hsync-len = <2>;
			vfront-porch = <8>;
			vback-porch = <6>;
			vsync-len = <2>;
		};

		port {
			lvds_panel_in: endpoint {
				remote-endpoint = <&lvds_out0>;
			};
		};
	};

	panel_lvds_backlight: panel-lvds-backlight {
		compatible = "gpio-backlight";
		gpios = <&gpiob 0 GPIO_ACTIVE_HIGH>; /* LVDS_BCKL_PWM */
		default-on;
		default-brightness-level = <0>;
		status = "disabled";
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_3v3_board: regulator-board@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "3v3_board";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpioa 12 GPIO_ACTIVE_HIGH>; /* 3V3_DVK_EN */
			enable-active-high;
			status = "okay";
		};

		reg_5v_board: regulator-board@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "5v_board";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpiob 2 GPIO_ACTIVE_HIGH>; /* 5V_EN */
			enable-active-high;
			status = "okay";
		};
	};

	/* AUDIO */
	sound_max98089: sound-max98089 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "stm32max98088";
		simple-audio-card,format = "i2s";
		/*simple-audio-card,bitclock-master = <&cpu_dai>;
		simple-audio-card,frame-master = <&cpu_dai>;*/
		routing =
			"Headphone Jack", "HPL",
			"Headphone Jack", "HPR",
			"Ext Spk", "SPKL",
			"Ext Spk", "SPKR",
			"LineOut", "RECL",
			"LineOut", "RECR",
			"Mic1", "MIC1",
			"Mic2", "MIC2",
			"LineInA", "INA1",
			"LineInA", "INA2",
			"LineInB", "INB1",
			"LineInB", "INB2";

		/*cpu_dai: simple-audio-card,cpu {
			sound-dai = <&i2s2>;
			system-clock-direction-out;
			clocks = <&rcc SPI2_K>;
		};*/

		codec_dai: simple-audio-card,codec {
			sound-dai = <&max98089>;
		};
	};
};

&combophy {
	clocks = <&rcc CK_BUS_USB3PCIEPHY>, <&rcc CK_KER_USB3PCIEPHY>, <&pad_clk>;
	clock-names = "apb-clk", "ker-clk", "pad-clk";
	status = "okay";
};


&csi2host {
	status = "okay";
	ports {
		#address-cells = <1>;
		#size-cells = <0>;
		port@0 {
			reg = <0>;
			csi2host_sink: endpoint {
				remote-endpoint = <&ov5640_mipi_ep>;
				data-lanes = <0 1>;
				bus-type = <4>;
			};
		};
		port@1 {
			reg = <1>;
			csi2host_source: endpoint {
				remote-endpoint = <&dcmipp_0>;
			};
		};
	};
};

&dcmipp {
	status = "okay";
	port {
		dcmipp_0: endpoint {
			remote-endpoint = <&csi2host_source>;
			bus-type = <4>;
		};
	};
};

&dsi {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			dsi_in: endpoint {
				remote-endpoint = <&ltdc_ep0_out>;
			};
		};

		port@1 {
			reg = <1>;
			dsi_out: endpoint {
				remote-endpoint = <&lt8912_1_in>;
			};
		};
	};
};

&eth1 {
	status = "okay";
	pinctrl-0 = <&eth1_mdio_pins_a>;
	pinctrl-names = "default";
	phy-mode = "rgmii";
	max-speed = <1000>;
	st,eth-clk-sel;

	fixed_link: fixed-link {
		speed = <1000>;
		full-duplex;
	};

	/* ETH1 and ETH3 shared the mdio bus ETH1_MDIO */
	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";

		phy1_eth1: ethernet-phy@0 {
			compatible = "ethernet-phy-id0141.0dd0"; /* PHY ID for Marvell 88E1512 */
			reset-gpios =  <&gpiob 3 GPIO_ACTIVE_LOW>; /* ETH1_RST */
			reset-assert-us = <1000>;
			reset-deassert-us = <2000>;
			reg = <0>;
		};

		phy2_eth1: ethernet-phy@2 {
			compatible = "ethernet-phy-id0141.0dd0"; /* PHY ID for Marvell 88E1512 */
			reset-gpios =  <&gpiob 15 GPIO_ACTIVE_LOW>; /* ETH3_RST */
			reset-assert-us = <1000>;
			reset-deassert-us = <2000>;
			reg = <2>;
		};
	};
};

&eth2 {
	status = "okay";
	pinctrl-0 = <&eth2_rgmii_pins_a>;
	pinctrl-names = "default";
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy1_eth2>;
	st,eth-ptp-from-rcc;

	/* ETH2 connected to mdio bus ETH2_MDIO */
	mdio1 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		phy1_eth2: ethernet-phy@1 {
			compatible = "ethernet-phy-id0141.0dd0"; /* PHY ID for Marvell 88E1512 */
			reset-gpios =  <&gpiob 6 GPIO_ACTIVE_LOW>; /* ETH2_RST */
			reset-assert-us = <1000>;
			reset-deassert-us = <2000>;
			reg = <1>;
		};
	};
};

/* Peripheral I2C bus */
&i2c1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp25_i2c1_pins>;
	pinctrl-1 = <&ccmp25_i2c1_sleep_pins>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	clock-frequency = <100000>;
	status = "okay";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;

	/* Touch */
	goodix_touch: goodix_touch@14 {
		compatible = "goodix,gt9271";
		reg = <0x14>;
		interrupt-parent = <&gpiod>;
		interrupts = <5 IRQ_TYPE_EDGE_RISING>;
		irq-gpios = <&gpiod 5 GPIO_ACTIVE_HIGH>; /* LVDS_IRQ */
		status = "disabled";
	};

	goodix_touch2: goodix_touch2@5d {
		compatible = "goodix,gt9271";
		reg = <0x5d>;
		interrupt-parent = <&gpiod>;
		interrupts = <5 IRQ_TYPE_EDGE_RISING>;
		irq-gpios = <&gpiod 5 GPIO_ACTIVE_HIGH>; /* LVDS_IRQ */
		status = "disabled";
	};

	lt_bridge: lt8912@48 {
		compatible = "lontium,lt8912";
		reg = <0x48>;
		reset-gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
		hpd-gpios = <&gpiod 2 GPIO_ACTIVE_HIGH>;
		no-edid;
		digi,dsi-lanes = <4>;
		vdd1-supply = <&reg_5v_board>;
		vdd2-supply = <&scmi_ldo7>; /* 1V8_HDMI */
		status = "okay";

		port {
			lt8912_1_in: endpoint {
				/* add lanes */
				remote-endpoint = <&dsi_out>;
			};
		};

		display-timings {
			native-mode = <&timing1>;

			/* High Definition */
			timing0: timing0 {
				clock-frequency = <74250000>;
				hactive = <1280>;
				vactive = <720>;
				hfront-porch = <110>;
				hsync-len = <40>;
				hback-porch = <220>;
				vfront-porch = <5>;
				vsync-len = <5>;
				vback-porch = <20>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <0>;
				pixelclk-active = <0>;
			};

			/* Full HD */
			timing1: timing1 {
				clock-frequency = <148500000>;
				hactive = <1920>;
				vactive = <1080>;
				hfront-porch = <88>;
				hsync-len = <44>;
				hback-porch = <148>;
				vfront-porch = <36>;
				vsync-len = <5>;
				vback-porch = <4>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <0>;
				pixelclk-active = <0>;
			};
		};
	};

	/* MIPI-CSI camera */
	ov5640_mipi: ov5640_mipi@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		clocks = <&clk_ext_camera>;
		clock-names = "xclk";
		csi_id = <0>;
		DOVDD-supply = <&reg_3v3_board>;
		reset-gpios = <&gpiog 7 (GPIO_ACTIVE_LOW | GPIO_PUSH_PULL)>; /* CSI_RESET */
		status = "okay";

		port {
			ov5640_mipi_ep: endpoint {
				remote-endpoint = <&csi2host_sink>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
				link-frequencies = /bits/ 64 <594000000>;
			};
		};
	};

	max98089: codec@10 {
		compatible = "maxim,max98089";
		reg = <0x10>;
		/*clocks = <&rcc SPI2_K>;*/
		clock-names = "mclk";
		#sound-dai-cells = <0>;
		#clock-cells = <0>;
		status = "okay";
	};
};

/* J34 Connector */
&i2c2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c2_pins_a>;
	pinctrl-1 = <&i2c2_sleep_pins_a>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	clock-frequency = <100000>;
	status = "okay";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
};

&i2s2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2s2_pins_a>;
	pinctrl-1 = <&i2s2_sleep_pins_a>;
	status = "disabled";

	i2s2_port: port {
		i2s2_endpoint: endpoint {
			/*remote-endpoint = <&adv7535_tx_endpoint>;*/
			format = "i2s";
			mclk-fs = <256>;
		};
	};
};

&ltdc {
	rotation-memory = <&ltdc_sec_rotation>;
	status = "okay";

	port {
		#address-cells = <1>;
		#size-cells = <0>;

		ltdc_ep0_out: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&dsi_in>;
		};

		ltdc_ep1_out: endpoint@1 {
			reg = <1>;
			remote-endpoint = <&lvds_in>;
		};
	};
};

&lvds {
	status = "disabled";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			lvds_in: endpoint {
				remote-endpoint = <&ltdc_ep1_out>;
			};
		};

		port@1 {
			reg = <1>;
			lvds_out0: endpoint {
				remote-endpoint = <&lvds_panel_in>;
			};
		};
	};
};

/* FDCAN1 */
&m_can1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&m_can1_pins_a>;
	pinctrl-1 = <&m_can1_sleep_pins_a>;
	status = "okay";
};

/* FDCAN2 */
&m_can2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp25_m_can2_pins>;
	pinctrl-1 = <&ccmp25_m_can2_sleep_pins>;
	status = "okay";
};

&mlahb {
	intc_rpmsg: interrupt-controller@1 {
		compatible = "rpmsg,intc";
		reg = <1 0>;
		#interrupt-cells = <1>;
		interrupt-controller;
	};

	i2c_rpmsg: i2c@2 {
		compatible = "rpmsg,i2c-controller";
		reg = <2 0>;
		rpmsg,dev-id = "rpmsg_i2c";
		#address-cells = <1>;
		#size-cells = <0>;
		status = "okay";

		typec@35 {
			compatible = "st,stm32mp25-typec";
			reg = <0x35>;
			interrupts-extended = <&intc_rpmsg 0>;
			status = "okay";
			connector {
				compatible = "usb-c-connector";
				label = "USB-C";

				port {
					typec_ep: endpoint {
						remote-endpoint = <&dwc3_ep>;
					};
				};
			};
		};
	};
};

&ommanager {
	memory-region = <&mm_ospi1>;
	memory-region-names = "mm_ospi1";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ospi1_clk_pins_a
		     &ospi1_io03_pins_a
		     &ospi1_cs0_pins_a>;

	pinctrl-1 = <&ospi1_clk_sleep_pins_a
		     &ospi1_io03_sleep_pins_a
		     &ospi1_cs0_sleep_pins_a>;

	status = "disabled";

	ospi1: spi@40430000 {
		#address-cells = <1>;
		#size-cells = <0>;
		memory-region = <&mm_ospi1>;
		status = "disabled";
	};
};

&pcie_ep {
	reset-gpios = <&gpioh 5 GPIO_ACTIVE_LOW>;
	status = "disabled";
	/* DIGI - Not supported by ST driver */
	/*disable-gpio = <&gpioh 4 GPIO_ACTIVE_LOW>;*/
	/*wake-gpio = <&gpioa 1 GPIO_ACTIVE_LOW>;*/
};

&pcie_rc {
	reset-gpios = <&gpioh 5 GPIO_ACTIVE_LOW>;
	status = "okay";
	/* DIGI - Not supported by ST driver */
	/*disable-gpio = <&gpioh 4 GPIO_ACTIVE_LOW>;*/
	/*wake-gpio = <&gpioa 1 GPIO_ACTIVE_LOW>;*/
};

&sai4 {
	status = "okay";

	sai4b: audio-controller@40340024 {
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&ccmp25_sai4a_pins>, <&ccmp25_sai4b_pins>;
		pinctrl-1 = <&ccmp25_sai4a_sleep_pins>, <&ccmp25_sai4b_sleep_pins>;
		status = "okay";

		/*sai4a_port: port {
			sai4a_endpoint: endpoint {
				remote-endpoint = <&spdif_in_endpoint>;
			};
		};*/

		/*sai4b_port: port {
			sai4b_endpoint: endpoint {
				remote-endpoint = <&spdif_out_endpoint>;
			};
		};*/

		/* See https://wiki.st.com/stm32mpu/wiki/SAI_device_tree_configuration */
	};
};

/* Micro SD */
&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpiod 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&reg_3v3_board>; /* card's VDD pin */
	vqmmc-supply = <&scmi_vddio_sdcard>; /* voltage used to pull up signal lines */
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-ddr50;
	sd-uhs-sdr104;
	status = "okay";
};

/* MikroBus SPI */
&spi3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi3_pins_a>;
	pinctrl-1 = <&spi3_sleep_pins_a>;
	cs-gpios = <&gpiob 1 0>; /* SPI3_SS */
	status = "okay";
};

/* ETH1 and ETH3 */
&switch0 {
	status = "okay";
	pinctrl-0 = <&eth1_rgmii_pins_a>, <&eth3_rgmii_pins_a>;
	pinctrl-names = "default";
	phy-mode = "rgmii";
	st,ethsw-internal-125;
};

&timers20 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
	pwm_lvds_bckl: pwm {
		pinctrl-0 = <&ccmp25_pwm2_pins>;
		pinctrl-1 = <&ccmp25_pwm2_sleep_pins>;
		pinctrl-names = "default", "sleep";
		status = "okay";
	};
	timer@19 {
		status = "okay";
	};
};

/* Console A35 */
&usart2 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&usart2_pins_a>;
	pinctrl-1 = <&usart2_idle_pins_a>;
	pinctrl-2 = <&usart2_sleep_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

/* Console M33 / XBEE */
&uart5 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&ccmp25_uart5_pins &ccmp25_uart5_rtscts_pins>;
	pinctrl-1 = <&ccmp25_uart5_idle_pins &ccmp25_uart5_rtscts_idle_pins>;
	pinctrl-2 = <&ccmp25_uart5_sleep_pins &ccmp25_uart5_rtscts_sleep_pins>;
	uart-has-rtscts;
	status = "okay";
};

/* Connector J8 */
&usart6 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&usart6_pins_a>;
	pinctrl-1 = <&usart6_idle_pins_a>;
	pinctrl-2 = <&usart6_sleep_pins_a>;
	uart-has-rtscts;
	status = "disabled";
};

/* MikroBus UART */
&uart7 {
	pinctrl-names = "default", "idle", "sleep";
	pinctrl-0 = <&ccmp25_uart7_pins>;
	pinctrl-1 = <&ccmp25_uart7_idle_pins>;
	pinctrl-2 = <&ccmp25_uart7_sleep_pins>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

&usb2_phy1 {
	status = "okay";
};

&usb2_phy2 {
	status = "okay";
};

&usb2h {
	status = "okay";

	usb2h_ohci: usb@482e0000 {
		status = "disabled";
	};
};

&usb3dr {
	status = "okay";

	dwc3: usb@48300000 {
		maximum-speed = "high-speed";
		usb-role-switch;
		port {
			dwc3_ep: endpoint {
				remote-endpoint = <&typec_ep>;
			};
		};
	};
};

&pinctrl {
	ccmp25_i2c1_pins: ccmp25-i2c1-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 13, AF9)>, /* I2C1_SCL */
				 <STM32_PINMUX('I', 1, AF9)>; /* I2C1_SDA */
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	ccmp25_i2c1_sleep_pins: ccmp25-i2c1-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 13, ANALOG)>, /* I2C1_SCL */
				 <STM32_PINMUX('I', 1, ANALOG)>; /* I2C1_SDA */
		};
	};

	ccmp25_m_can2_pins: ccmp25-m-can2-0 {
		pins1 {
			pinmux = <STM32_PINMUX('I', 9, AF4)>; /* FDCAN2_TX */
			slew-rate = <1>;
			drive-push-pull;
			bias-disable;
		};
		pins2 {
			pinmux = <STM32_PINMUX('I', 10, AF4)>; /* FDCAN2_RX */
			bias-disable;
		};
	};

	ccmp25_m_can2_sleep_pins: ccmp25-m-can2-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 9, ANALOG)>, /* FDCAN2_TX */
				 <STM32_PINMUX('I', 10, ANALOG)>; /* FDCAN2_RX */
		};
	};

	ccmp25_pwm2_pins: ccmp25-pwm2-0 {
		pins {
			pinmux = <STM32_PINMUX('B', 0, AF8)>; /* TIM20_CH4N */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	ccmp25_pwm2_sleep_pins: ccmp25-pwm2-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('B', 0, ANALOG)>; /* TIM20_CH4N */
		};
	};

	ccmp25_sai4a_pins: ccmp25-sai4a-1 {
		pins {
			pinmux = <STM32_PINMUX('D', 1, AF5)>; /* SAI4_SD_A */
			bias-disable;
		};
	};

	ccmp25_sai4a_sleep_pins: ccmp25-sai4a-sleep-1 {
		pins {
			pinmux = <STM32_PINMUX('D', 1, ANALOG)>; /* SAI4_SD_A */
		};
	};

	ccmp25_sai4b_pins: ccmp25-sai2b-0 {
		pins1 {
			pinmux = <STM32_PINMUX('I', 2, AF4)>, /* SAI4_SCK_B */
				 <STM32_PINMUX('I', 4, AF4)>, /* SAI4_FS_B */
				 <STM32_PINMUX('I', 0, AF4)>; /* SAI4_MCLK_B */
			slew-rate = <0>;
			drive-push-pull;
			bias-disable;
		};
		pins2 {
			pinmux = <STM32_PINMUX('I', 3, AF4)>; /* SAI4_SD_B */
			bias-disable;
		};
	};

	ccmp25_sai4b_sleep_pins: ccmp25-sai2b-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 3, ANALOG)>, /* SAI4_SDO_B */
				 <STM32_PINMUX('I', 2, ANALOG)>, /* SAI4_SCK_B */
				 <STM32_PINMUX('I', 4, ANALOG)>, /* SAI4_FS_B */
				 <STM32_PINMUX('I', 0, ANALOG)>; /* SAI4_MCLK_B */
		};
	};

	ccmp25_uart5_pins: ccmp25-uart5-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 9, AF5)>; /* UART5_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 10, AF5)>; /* UART5_RX */
			bias-disable;
		};
	};

	ccmp25_uart5_idle_pins: ccmp25-uart5-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 9, ANALOG)>; /* UART5_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 10, AF5)>; /* UART5_RX */
			bias-disable;
		};
	};

	ccmp25_uart5_sleep_pins: ccmp25-uart5-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 9, ANALOG)>, /* UART5_TX */
				 <STM32_PINMUX('G', 10, ANALOG)>; /* UART5_RX */
		};
	};

	ccmp25_uart5_rtscts_pins: ccmp25-uart5-rtscts-0 {
		pins1 {
			pinmux = <STM32_PINMUX('G', 8, AF5)>;  /* UART5_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('I', 5, AF5)>; /* UART5_CTS */
			bias-pull-up;
		};
	};

	ccmp25_uart5_rtscts_idle_pins: ccmp25-uart5-rtscts-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('I', 5, ANALOG)>; /* UART5_CTS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('G', 8, AF5)>; /* UART5_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	ccmp25_uart5_rtscts_sleep_pins: ccmp25-uart5-rtscts-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G', 8, ANALOG)>, /* UART5_RTS */
				 <STM32_PINMUX('I', 5, ANALOG)>; /* UART5_CTS */
		};
	};

	ccmp25_uart7_pins: ccmp25-uart7-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 3, AF6)>; /* UART7_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 0, AF6)>; /* UART7_RX */
			bias-disable;
		};
	};

	ccmp25_uart7_idle_pins: ccmp25-uart7-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 3, ANALOG)>; /* UART7_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 0, AF6)>; /* UART7_RX */
			bias-disable;
		};
	};

	ccmp25_uart7_sleep_pins: ccmp25-uart7-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('D', 3, ANALOG)>, /* UART7_TX */
				 <STM32_PINMUX('D', 0, ANALOG)>; /* UART7_RX */
		};
	};
};
